/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.ManagerUser;

import GUI.Items.*;
import GUI.Customer.*;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import model.userModel;
import DB.dbConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DateFormatSymbols;
import java.time.Year;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.swing.JRViewer;
import org.apache.log4j.Logger;

/**
 *
 * @author kulas
 */
public class attendance extends javax.swing.JDialog {

    /**
     * Creates new form addCustomer
     */
    static Logger log1 = Logger.getLogger(attendance.class.getName());
    Connection conn;
    
    private userModel um;
    
    public attendance(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        basicSalary.setEditable(false);
        total();
        um = new userModel();
    }
    
    void clean() {
        employeeIDField.setText("");
        name.setText("");
        nic.setText("");
        comboBox.setSelectedIndex(0);
        basicSalary.setText("0.0");
        deduction.setText("0.0");
        total.setText("0.0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        employeeIDField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox();
        basicSalary = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        nic = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        deduction = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jLabel17 = new javax.swing.JLabel();
        addBtn1 = new javax.swing.JButton();
        addBtn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("P A Y  R O L E");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 550));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        jLabel1.setText("Employee Attendence Details here");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setText("Employee Barcode");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 55, -1, 20));

        employeeIDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                employeeIDFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                employeeIDFieldKeyTyped(evt);
            }
        });
        jPanel1.add(employeeIDField, new org.netbeans.lib.awtextra.AbsoluteConstraints(407, 55, 182, -1));

        jLabel3.setText("Employee Position");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 95, -1, -1));

        jLabel4.setText("Name with Initials");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 133, -1, -1));

        jLabel5.setText("NIC");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 133, -1, -1));
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 130, 214, -1));

        addBtn.setBackground(new java.awt.Color(0, 51, 51));
        addBtn.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plus (2).png"))); // NOI18N
        addBtn.setText("Add Details");
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), null, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204)));
        addBtn.setContentAreaFilled(false);
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setOpaque(true);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 460, 143, -1));

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setText("Please fill in following below.");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, -1, -1));

        comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Select Job Role --", "Admin", "Manager", "Cashier 1", "Cashier 2" }));
        comboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxItemStateChanged(evt);
            }
        });
        comboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboBoxMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboBoxMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboBoxMouseReleased(evt);
            }
        });
        jPanel1.add(comboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 92, 170, -1));

        basicSalary.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        basicSalary.setText("0.0");
        basicSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicSalaryActionPerformed(evt);
            }
        });
        basicSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                basicSalaryKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                basicSalaryKeyTyped(evt);
            }
        });
        jPanel1.add(basicSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 223, 110, -1));

        jLabel14.setText("Basic Salary");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 226, -1, -1));

        nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nicKeyTyped(evt);
            }
        });
        jPanel1.add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 130, 152, -1));

        jLabel15.setText("Salary Deduction");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 257, -1, -1));

        deduction.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        deduction.setText("0.0");
        deduction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deductionActionPerformed(evt);
            }
        });
        deduction.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deductionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                deductionKeyTyped(evt);
            }
        });
        jPanel1.add(deduction, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 254, 110, -1));

        total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total.setText("0.0");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totalKeyTyped(evt);
            }
        });
        jPanel1.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 285, 110, -1));

        jLabel16.setText("Total");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 288, -1, -1));

        jMonthChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jMonthChooser1PropertyChange(evt);
            }
        });
        jPanel1.add(jMonthChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 177, -1, -1));

        jLabel17.setText("Select Month");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 177, -1, -1));

        addBtn1.setBackground(new java.awt.Color(0, 51, 51));
        addBtn1.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        addBtn1.setForeground(new java.awt.Color(255, 255, 255));
        addBtn1.setText("Create Pay Advice");
        addBtn1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), null, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204)));
        addBtn1.setContentAreaFilled(false);
        addBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn1.setOpaque(true);
        addBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtn1ActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, 143, -1));

        addBtn2.setBackground(new java.awt.Color(0, 51, 51));
        addBtn2.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        addBtn2.setForeground(new java.awt.Color(255, 255, 255));
        addBtn2.setText("Clear Data");
        addBtn2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), null, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204)));
        addBtn2.setContentAreaFilled(false);
        addBtn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn2.setOpaque(true);
        addBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtn2ActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 143, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(616, 589));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        String barcode = employeeIDField.getText();
        String position = comboBox.getSelectedItem().toString();
        String n = name.getText();
        String i = nic.getText();
        double bSalary = Double.parseDouble(basicSalary.getText());
        double salaryDEduc = Double.parseDouble(deduction.getText());
        double tot = Double.parseDouble(total.getText());
        int month = ((Integer) jMonthChooser1.getMonth()).intValue() + 1;
            String strMonth = new DateFormatSymbols().getMonths()[month - 1];
        int year = Year.now().getValue();

         


     String resrultSalary = um.insertSalary(barcode, position, n, i, bSalary, salaryDEduc, tot,strMonth,year);
       JOptionPane.showConfirmDialog(rootPane, resrultSalary);
//        
//        try {
//            DB.dbConnection.getConnection().createStatement().executeUpdate("UPDATE grn  SET  qty = qty -'" + qty1.getText() + "' WHERE id_grn = ?;");
//        } catch (SQLException ex) {
//            log1.debug(ex.getMessage());
//            
//        }
//        
//        GUI.Items.itemsFrame.loadProductTable();
//        String resrultStock = um.insertStock(pd, buyingPrice, sellingPrice, qt1);
//
        clean();


    }//GEN-LAST:event_addBtnActionPerformed

    private void employeeIDFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeIDFieldKeyTyped
        // TODO add your handling code here:
        if ("".equals(employeeIDField.getText())) {
            
        }
    }//GEN-LAST:event_employeeIDFieldKeyTyped

    private void basicSalaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_basicSalaryKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_basicSalaryKeyTyped

    private void basicSalaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_basicSalaryKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_basicSalaryKeyReleased

    private void nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_nicKeyReleased

    private void nicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nicKeyTyped

    private void deductionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deductionKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_deductionKeyReleased

    private void deductionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deductionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_deductionKeyTyped

    private void deductionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deductionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deductionActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void totalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_totalKeyReleased

    private void totalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_totalKeyTyped

    private void comboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxMouseClicked
        Object o1 = comboBox.getSelectedItem();
        String attribute = String.valueOf(o1);
        
        if (attribute == "Admin") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Admin'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        } else if (attribute == "Manager") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Manager'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        } else if (attribute == "Cashier 1") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Cashier 1'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        } else if (attribute == "Cashier 2") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Cashier 2'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        }
    }//GEN-LAST:event_comboBoxMouseClicked

    private void comboBoxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxMouseReleased
        
    }//GEN-LAST:event_comboBoxMouseReleased

    private void comboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxMousePressed

    private void basicSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_basicSalaryActionPerformed

    private void comboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxItemStateChanged
          Object o1 = comboBox.getSelectedItem();
        String attribute = String.valueOf(o1);
        
        if (attribute == "Admin") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Admin'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        } else if (attribute == "Manager") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Manager'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        } else if (attribute == "Cashier 1") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Cashier 1'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        } else if (attribute == "Cashier 2") {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
                String sql = "SELECT id_staff,n_initials,nic,salary FROM staff where job_role = 'Cashier 2'";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                
                while (rs.next()) {
                    String id = rs.getString("id_staff");
                    String nwi = rs.getString("n_initials");
                    String i = rs.getString("nic");
                    String basic = rs.getString("salary");
                    employeeIDField.setText(id);
                    name.setText(nwi);
                    nic.setText(i);
                    basicSalary.setText(basic);
                }
                
            } catch (Exception e) {
                e.printStackTrace();
                log1.debug(e.getMessage());
            }
        }
    }//GEN-LAST:event_comboBoxItemStateChanged

    private void jMonthChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jMonthChooser1PropertyChange
       if (!employeeIDField.getText().isEmpty()) {
            String pId = employeeIDField.getText();
            int month = ((Integer) jMonthChooser1.getMonth()).intValue() + 1;
            
            String d = deduction.getText();
            double result = um.getAttendanceForSalary(pId, month,d);
            total.setText(String.valueOf(result));
        }

        
        
    }//GEN-LAST:event_jMonthChooser1PropertyChange

    private void addBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtn1ActionPerformed
       
        
        String emp = employeeIDField.getText();
        this.dispose();
        String reportPath = "C:\\Users\\kulas\\JaspersoftWorkspace\\MyReports\\pay_advice.jrxml";
        Map m = new HashMap();
                m.put("staffID", emp);
        
        try {

            JasperReport jc = JasperCompileManager.compileReport(reportPath);

            JasperPrint jp = JasperFillManager.fillReport(jc, m, DB.dbConnection.getConnection());
            JRViewer jv = new JRViewer(jp);
            GUI.AddSales.report gu = new GUI.AddSales.report();
            gu.tabbedPane.add(jv);
            //System.out.println("ok");
            gu.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        } 
        
        
    }//GEN-LAST:event_addBtn1ActionPerformed

    private void employeeIDFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeIDFieldKeyReleased
        try {
            serachEmployeeID sp = new serachEmployeeID(null, true);
            if (!sp.isVisible()) {
                sp.setVisible(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
            log1.debug(e.getMessage());
        }
        
        
        
        
    }//GEN-LAST:event_employeeIDFieldKeyReleased

    private void addBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtn2ActionPerformed
        clean();
    }//GEN-LAST:event_addBtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                attendance dialog = new attendance(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton addBtn1;
    private javax.swing.JButton addBtn2;
    public static javax.swing.JTextField basicSalary;
    public static javax.swing.JComboBox comboBox;
    public static javax.swing.JTextField deduction;
    public static javax.swing.JTextField employeeIDField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JTextField name;
    public static javax.swing.JTextField nic;
    public static javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

    void details() {
//    String id = employeeIDField.getText();
//    String nwi = name.getText();
//    String i = nic.getText();
//    String basic = basicSalary.getText();
        
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3307/lakshaapplication?useSSL=false", "root", "Tc@19720228");
            String sql = "SELECT id_staff,n_initials,nic,salary FROM staff job_role = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while (rs.next()) {
                String id = rs.getString("id_staff");
                String nwi = rs.getString("n_initials");
                String i = rs.getString("nic");
                String basic = rs.getString("salary");
                employeeIDField.setText(id);
                name.setText(nwi);
                nic.setText(i);
                basicSalary.setText(basic);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            log1.debug(e.getMessage());
        }
        
    }
    
    void total() {
        double nTotal;
        double deduct;
        double tt;
        String salary1=basicSalary.getText();
        String deducti=deduction.getText();
        nTotal = Double.parseDouble(salary1);
        deduct = Double.parseDouble(deducti);
        
        tt = nTotal - deduct;
        
        total.setText(Double.toString(tt));
    }
    
    
}
